#!/bin/sh

#
# Auto-rotation script
#
# Based on:
# https://gist.githubusercontent.com/ei-grad/4d9d23b1463a99d24a8d/raw/rotate.py
#

BASEDIR="$HOME/.convertible"
mkdir -p "$BASEDIR"

LOCKFILE="$BASEDIR/.autorot.lock"
ROTLOCK_FILE="$BASEDIR/.rotation-lock"

(
flock -n 9 || exit 1

OUTPUT="$(xrandr | grep -oP '^([A-Za-z0-9_-]+)(?= connected primary)')"
if [ -z "$OUTPUT" ]; then
    echo "Xrandr output not found" >&2
    exit 1
fi

if ! cat /sys/bus/iio/devices/iio\:device*/name | grep -q accel; then
    echo "Accellerator not found" >&2
    exit 1
fi

for dev in /sys/bus/iio/devices/iio\:device*; do
	[ -z "$(cat "$dev/name" | grep accel)" ] || break
done

scale=$(cat "$dev/in_accel_scale")
G=7 # (m^2 / s) sensibility, gravity trigger

input_devs=$(xinput list |
    grep -oP '(?<=â†³ )[A-Za-z0-9_: -]+?(?=\s*id=)' |
    grep -iP 'wacom|pen|stylus|finger|touch|trackpoint')

rotate() {
    rot=$1
    xrandr --output "$OUTPUT" --rotate $rot
    while read -r input_dev
    do
        if [ $rot = normal ]; then
            xinput set-prop "$input_dev" "Coordinate Transformation Matrix" 1 0 0 0 1 0 0 0 1
        elif [ $rot = right ]; then
            xinput set-prop "$input_dev" "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1
        elif [ $rot = inverted ]; then
            xinput set-prop "$input_dev" "Coordinate Transformation Matrix" -1 0 1 0 -1 1 0 0 1
        elif [ $rot = left ]; then
            xinput set-prop "$input_dev" "Coordinate Transformation Matrix" 0 -1 1 1 0 0 0 0 1
        fi
    done <<<"$input_devs"
}

first=true
while true; do
    [ ! -f "$ROTLOCK_FILE" ] && echo unlocked > "$ROTLOCK_FILE"
    rotlock="$(cat "$ROTLOCK_FILE" | tr -d '\n' | sed 's/^\s*//;s/\s*$//')"
    [ "$rotlock" = "locked" ] && { sleep 1; continue; }

    ax=$(cat "$dev/in_accel_x_raw")
    ay=$(cat "$dev/in_accel_y_raw")
    ax=$(echo "$ax * $scale" | bc)
    ay=$(echo "$ay * $scale" | bc)

    state="$(xrandr |
        grep -oP '^[A-Za-z0-9_-]+ connected primary [0-9x+]+ ([a-z]+)' |
        grep -oP '(right|inverted|left)$')"

    if ([ ! -z "$state" ] || $first) && [ $(echo "$ay <= -$G" | bc) -gt 0 ]; then
        rotate normal
        "$BASEDIR/landscape"
    elif ([ "$state" != right ] || $first) && [ $(echo "$ax <= -$G" | bc) -gt 0 ]; then
        rotate right
        "$BASEDIR/portrait"
    elif ([ "$state" != inverted ] || $first) && [ $(echo "$ay >= $G" | bc) -gt 0 ]; then
        rotate inverted
        "$BASEDIR/landscape"
    elif ([ "$state" != left ] || $first) && [ $(echo "$ax >= $G" | bc) -gt 0 ]; then
        rotate left
        "$BASEDIR/portrait"
    fi
    first=false
    sleep 1
done

) 9>"$LOCKFILE"

